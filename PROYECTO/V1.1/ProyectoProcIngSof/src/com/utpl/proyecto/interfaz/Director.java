/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.utpl.proyecto.interfaz;

import com.utpl.proyecto.Comision;
import com.utpl.proyecto.Personas;
import com.utpl.proyecto.Propuesta;
import com.utpl.proyecto.Proyecto;
import com.utpl.proyecto.controladores.ComisionJpaController;
import com.utpl.proyecto.controladores.PropuestaJpaController;
import com.utpl.proyecto.controladores.ProyectoJpaController;
import com.utpl.proyecto.controladores.exceptions.NonexistentEntityException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cvcaraguay
 */
public class Director extends javax.swing.JFrame {

    public static EntityManagerFactory fabrica;
    public static PropuestaJpaController controladorPropuesta;
    public static ProyectoJpaController controladorProyecto;
    public static ComisionJpaController controladorComision;
    public static DefaultTableModel modeloTablaProyectos;
    public static DefaultTableModel modeloTablaPropuestasEvaluar;

    private Personas persona;
    private Propuesta propuesta;

    /**
     * Creates new form Estudiante
     */
    public Director() {
        initComponents();
    }

    public Director(Personas persona) {
        this();
        this.persona = persona;
        lblBievenido.setText("Bienvenido " + persona.getNombre() + " " + persona.getApellido() + ".");
        fabrica = Persistence.createEntityManagerFactory("ProyectoCarlosPU");
        controladorPropuesta = new PropuestaJpaController(fabrica);
        controladorProyecto = new ProyectoJpaController(fabrica);
        controladorComision = new ComisionJpaController(fabrica);

        modeloTablaProyectos = (DefaultTableModel) tblProyectos.getModel();
        modeloTablaPropuestasEvaluar = (DefaultTableModel) tblListaPropuestasEvaluar.getModel();
        cargarProyectos();
        cargarPropuestasAEvaluar();
    }

    public void cargarProyectos() {
        List<Proyecto> listaProyectos = controladorProyecto.findProyectoEntities();
        for (Proyecto p : listaProyectos) {
            modeloTablaProyectos.insertRow(0, new Object[]{
                p.getIdProyecto(),
                p.getIdPropuesta().getTema(),
                p.getIdPropuesta().getDescripcion()
            });
        }
    }

    public void cargarPropuestasAEvaluar() {
        List<Propuesta> listaPropuestas = controladorPropuesta.findPropuestaPendientes();
        if (listaPropuestas != null) {
            for (Propuesta p : listaPropuestas) {
                modeloTablaPropuestasEvaluar.insertRow(0, new Object[]{
                    p.getIdPropuesta(),
                    p.getTema(),
                    p.getDescripcion(),
                    getFormatoEstado(p.getEstado()),
                    p.getIdPersona().getNombre() + " " + p.getIdPersona().getApellido()
                });
            }
        }
    }

    public void removerProyectos() {
        for (int i = modeloTablaProyectos.getRowCount() - 1; i >= 0; i--) {
            modeloTablaProyectos.removeRow(i);
        }
    }
    
    public void removerPropuestasEvaluar() {
        for (int i = modeloTablaPropuestasEvaluar.getRowCount() - 1; i >= 0; i--) {
            modeloTablaPropuestasEvaluar.removeRow(i);
        }
    }

    public String getFormatoEstado(int estado) {
        switch (estado) {
            case 0:
                return "Pendiente";
            case 1:
                return "Aprobada";
            case 2:
                return "Reprobada";
        }
        return "Pendiente";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblBievenido = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProyectos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblListaPropuestasEvaluar = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnAprobar = new javax.swing.JButton();
        btnReprobar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Interfaz de Director de Titulación");
        setResizable(false);

        lblBievenido.setText("Bienvenido");

        tblProyectos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Propuesta", "Descripción"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProyectos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblProyectosMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblProyectos);
        if (tblProyectos.getColumnModel().getColumnCount() > 0) {
            tblProyectos.getColumnModel().getColumn(0).setResizable(false);
            tblProyectos.getColumnModel().getColumn(1).setResizable(false);
            tblProyectos.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblProyectos.getColumnModel().getColumn(2).setResizable(false);
            tblProyectos.getColumnModel().getColumn(2).setPreferredWidth(150);
        }

        tblListaPropuestasEvaluar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Propuesta", "Descripción", "Estado", "Persona"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblListaPropuestasEvaluar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblListaPropuestasEvaluarMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblListaPropuestasEvaluar);
        if (tblListaPropuestasEvaluar.getColumnModel().getColumnCount() > 0) {
            tblListaPropuestasEvaluar.getColumnModel().getColumn(0).setResizable(false);
            tblListaPropuestasEvaluar.getColumnModel().getColumn(1).setResizable(false);
            tblListaPropuestasEvaluar.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblListaPropuestasEvaluar.getColumnModel().getColumn(2).setResizable(false);
            tblListaPropuestasEvaluar.getColumnModel().getColumn(2).setPreferredWidth(150);
            tblListaPropuestasEvaluar.getColumnModel().getColumn(3).setResizable(false);
            tblListaPropuestasEvaluar.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel1.setText("Propuestas a Evaluar:");

        jLabel4.setText("Proyectos");

        btnAprobar.setText("Aprobar");
        btnAprobar.setEnabled(false);
        btnAprobar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAprobarActionPerformed(evt);
            }
        });

        btnReprobar.setText("Reprobar");
        btnReprobar.setEnabled(false);
        btnReprobar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReprobarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBievenido)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(248, 248, 248)
                .addComponent(btnAprobar)
                .addGap(18, 18, 18)
                .addComponent(btnReprobar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBievenido)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAprobar)
                    .addComponent(btnReprobar))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tblListaPropuestasEvaluarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListaPropuestasEvaluarMousePressed
        btnAprobar.setEnabled(true);
        btnReprobar.setEnabled(true);

        propuesta = controladorPropuesta.findPropuesta((Integer) modeloTablaPropuestasEvaluar.getValueAt(tblListaPropuestasEvaluar.getSelectedRow(), 0));
    }//GEN-LAST:event_tblListaPropuestasEvaluarMousePressed

    private void tblProyectosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProyectosMousePressed

    }//GEN-LAST:event_tblProyectosMousePressed

    private void btnReprobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReprobarActionPerformed
        propuesta.setEstado(2);
        try {
            controladorPropuesta.edit(propuesta);
            cargarPropuestasAEvaluar();
            JOptionPane.showMessageDialog(this, "Propuesta Reprobada.");
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(Estudiante.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(Estudiante.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnReprobarActionPerformed

    private void btnAprobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAprobarActionPerformed
        propuesta.setEstado(1);
        try {
            controladorPropuesta.edit(propuesta);
            controladorProyecto.create(new Proyecto(new Personas(2), new Personas(4), new Personas(5), propuesta));
            removerProyectos();
            removerPropuestasEvaluar();
            cargarProyectos();
            cargarPropuestasAEvaluar();
            btnAprobar.setEnabled(false);
            btnReprobar.setEnabled(false);
            JOptionPane.showMessageDialog(this, "Propuesta Aprobada.");
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(Estudiante.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(Estudiante.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAprobarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Director.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Director.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Director.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Director.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Director().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAprobar;
    private javax.swing.JButton btnReprobar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBievenido;
    private javax.swing.JTable tblListaPropuestasEvaluar;
    private javax.swing.JTable tblProyectos;
    // End of variables declaration//GEN-END:variables
}
